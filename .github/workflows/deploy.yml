name: Deploy to dev server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm" # Caches npm dependencies

      - name: Install dependencies
        run: npm run install:all

      - name: Run tests
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          ./build.sh

      - name: Save Docker image as .tar file
        run: |
          docker save bible-jot-client:latest -o bible-jot-client_latest.tar
          ls ./bible-jot-client_latest.tar

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Optional: Add the remote host to known_hosts to avoid SSH verification prompt
      - name: Add remote host to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy Docker image to the server
        run: |
          scp -i ~/.ssh/id_rsa ./bible-jot-client_latest.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/tmp

      - name: SSH to server and load Docker image
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker load -i /tmp/bible-jot-client_latest.tar
            docker stop bible-jot-client || true
            docker rm bible-jot-client || true
            docker run -d --name bible-jot-client -p 8000:80 bible-jot-client:latest
